{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/util.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/getBlobFromURL.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/clonePseudoElements.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/cloneNode.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/embedResources.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/embedImages.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/applyStyleFromOptions.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/embedWebFonts.js","webpack:///./node_modules/.pnpm/html-to-image@1.10.4/node_modules/html-to-image/es/index.js","webpack:///./src/workers/snapshot.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WOFF","JPEG","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","getExtension","url","match","exec","getMimeType","extension","toLowerCase","resolveUrl","baseUrl","window","location","protocol","doc","document","implementation","createHTMLDocument","base","createElement","a","head","appendChild","body","href","isDataUrl","search","makeDataUrl","content","mimeType","parseDataUrlContent","dataURL","split","uuid","counter","random","Math","toString","slice","toArray","arrayLike","arr","length","push","px","node","styleProperty","win","ownerDocument","defaultView","val","getComputedStyle","getPropertyValue","parseFloat","replace","getNodeWidth","leftBorder","rightBorder","clientWidth","getNodeHeight","topBorder","bottomBorder","clientHeight","getImageSize","targetNode","options","width","height","getPixelRatio","ratio","FINAL_PROCESS","process","e","env","devicePixelRatio","parseInt","Number","isNaN","canvasDimensionLimit","checkCanvasDimensions","canvas","createImage","Promise","resolve","reject","img","Image","onload","onerror","crossOrigin","decoding","src","async","svgToDataURL","then","XMLSerializer","serializeToString","encodeURIComponent","html","nodeToDataURL","xmlns","createElementNS","foreignObject","setAttribute","cache","getCacheKey","includeQueryParams","test","getBlobFromURL","cacheKey","cacheBust","Date","getTime","failed","reason","placeholder","imagePlaceholder","parts","msg","message","console","error","blob","contentType","deferred","fetch","fetchRequestInit","res","headers","reader","FileReader","onloadend","result","readAsDataURL","catch","formatCSSText","style","cssText","formatCSSProperties","map","priority","getPropertyPriority","join","getPseudoElementStyle","className","pseudo","selector","createTextNode","clonePseudoElement","nativeNode","clonedNode","err","styleElement","clonePseudoElements","cloneCanvasElement","toDataURL","cloneNode","cloneVideoElement","video","poster","metadata","cloneSingleNode","HTMLCanvasElement","HTMLVideoElement","isSlotElement","tagName","toUpperCase","cloneChildren","_a","children","assignedNodes","shadowRoot","childNodes","reduce","child","clonedChild","cloneCSSStyle","sourceStyle","targetStyle","transformOrigin","forEach","endsWith","reducedFont","floor","substring","setProperty","cloneInputValue","HTMLTextAreaElement","innerHTML","HTMLInputElement","cloneSelectValue","HTMLSelectElement","clonedSelect","selectedOption","Array","from","find","getAttribute","decorate","Element","isRoot","filter","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","toRegex","escaped","RegExp","parseURLs","raw","quotation","resourceURL","baseURL","resolvedURL","data","filterPreferredFontFormat","str","preferredFontFormat","format","shouldEmbed","embedResources","filteredCSSText","urls","css","embedBackground","background","cssString","embedImageNode","HTMLImageElement","SVGImageElement","baseVal","srcset","embedChildren","deferreds","embedImages","all","applyStyleFromOptions","backgroundColor","manual","keys","cssFetchCache","fetchCSS","text","embedFonts","meta","regexUrl","fontLocs","loadFonts","startsWith","URL","parseCSS","source","commentsRegex","keyframesRegex","matches","importRegex","combinedCSSRegex","unifiedRegex","lastIndex","getCSSRules","styleSheets","ret","sheet","cssRules","item","index","type","CSSRule","IMPORT_RULE","importIndex","rule","insertRule","inline","getWebFontRules","FONT_FACE_RULE","parseWebFontRules","Error","getWebFontCSS","rules","parentStyleSheet","cssTexts","embedWebFonts","fontEmbedCSS","styleNode","sytleContent","firstChild","insertBefore","toSvg","datauri","toCanvas","context","getContext","pixelRatio","canvasWidth","canvasHeight","skipAutoScale","fillStyle","fillRect","drawImage","toJpeg","quality","self","addEventListener","dom","postMessage"],"mappings":"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","file":"js/snapshot.worker.0f5cdeb1.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"87f5\");\n","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nexport function getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\nexport function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport function parseDataUrlContent(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'sync';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\n//# sourceMappingURL=util.js.map","import { parseDataUrlContent } from './util';\nconst cache = {};\nfunction getCacheKey(url, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return key;\n}\nexport async function getBlobFromURL(url, options) {\n    const cacheKey = getCacheKey(url, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // cache bypass, we don't have CORS issues with cached images\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n    }\n    const failed = (reason) => {\n        let placeholder = '';\n        if (options.imagePlaceholder) {\n            const parts = options.imagePlaceholder.split(/,/);\n            if (parts && parts[1]) {\n                placeholder = parts[1];\n            }\n        }\n        let msg = `Failed to fetch resource: ${url}`;\n        if (reason) {\n            msg = typeof reason === 'string' ? reason : reason.message;\n        }\n        if (msg) {\n            console.error(msg);\n        }\n        return {\n            blob: placeholder,\n            contentType: '',\n        };\n    };\n    const deferred = window\n        .fetch(url, options.fetchRequestInit)\n        .then((res) => \n    // eslint-disable-next-line promise/no-nesting\n    res.blob().then((blob) => ({\n        blob,\n        contentType: res.headers.get('Content-Type') || '',\n    })))\n        .then(({ blob, contentType }) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({\n            contentType,\n            blob: reader.result,\n        });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    }))\n        .then(({ blob, contentType }) => ({\n        contentType,\n        blob: parseDataUrlContent(blob),\n    }))\n        // on failed\n        .catch(failed);\n    // cache result\n    cache[cacheKey] = deferred;\n    return deferred;\n}\n//# sourceMappingURL=getBlobFromURL.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clonePseudoElements.js.map","import { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, getMimeType, makeDataUrl, toArray } from './util';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    const poster = video.poster;\n    const metadata = await getBlobFromURL(poster, options);\n    const dataURL = makeDataUrl(metadata.blob, getMimeType(poster) || metadata.contentType);\n    return createImage(dataURL);\n}\nasync function cloneSingleNode(node, options) {\n    if (node instanceof HTMLCanvasElement) {\n        return cloneCanvasElement(node);\n    }\n    if (node instanceof HTMLVideoElement && node.poster) {\n        return cloneVideoElement(node, options);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a;\n    const children = isSlotElement(nativeNode) && nativeNode.assignedNodes\n        ? toArray(nativeNode.assignedNodes())\n        : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n    if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n        return clonedNode;\n    }\n    return children\n        .reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve())\n        .then(() => clonedNode);\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLTextAreaElement) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (nativeNode instanceof HTMLInputElement) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLSelectElement) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (!(clonedNode instanceof Element)) {\n        return clonedNode;\n    }\n    cloneCSSStyle(nativeNode, clonedNode);\n    clonePseudoElements(nativeNode, clonedNode);\n    cloneInputValue(nativeNode, clonedNode);\n    cloneSelectValue(nativeNode, clonedNode);\n    return clonedNode;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode));\n}\n//# sourceMappingURL=cloneNode.js.map","import { getBlobFromURL } from './getBlobFromURL';\nimport { getMimeType, isDataUrl, makeDataUrl, resolveUrl } from './util';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nexport function toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const result = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        result.push(url);\n        return raw;\n    });\n    return result.filter((url) => !isDataUrl(url));\n}\nexport function embed(cssText, resourceURL, baseURL, options, get) {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n    return Promise.resolve(resolvedURL)\n        .then((url) => get ? get(url) : getBlobFromURL(url, options))\n        .then((data) => {\n        if (typeof data === 'string') {\n            return makeDataUrl(data, getMimeType(resourceURL));\n        }\n        return makeDataUrl(data.blob, getMimeType(resourceURL) || data.contentType);\n    })\n        .then((dataURL) => cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`))\n        .then((content) => content, () => resolvedURL);\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => \n    // eslint-disable-next-line promise/no-nesting\n    deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embedResources.js.map","import { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { getMimeType, isDataUrl, makeDataUrl, toArray } from './util';\nasync function embedBackground(clonedNode, options) {\n    var _a;\n    const background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n    if (!background) {\n        return clonedNode;\n    }\n    return Promise.resolve(background)\n        .then((cssString) => embedResources(cssString, null, options))\n        .then((cssString) => {\n        clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n        return clonedNode;\n    });\n}\nasync function embedImageNode(clonedNode, options) {\n    if (!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) &&\n        !(clonedNode instanceof SVGImageElement &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return Promise.resolve(clonedNode);\n    }\n    const src = clonedNode instanceof HTMLImageElement\n        ? clonedNode.src\n        : clonedNode.href.baseVal;\n    return Promise.resolve(src)\n        .then((url) => getBlobFromURL(url, options))\n        .then((data) => makeDataUrl(data.blob, getMimeType(src) || data.contentType))\n        .then((dataURL) => new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        if (clonedNode instanceof HTMLImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    }))\n        .then(() => clonedNode, () => clonedNode);\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    // eslint-disable-next-line no-use-before-define\n    const deferreds = children.map((child) => embedImages(child, options));\n    return Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (!(clonedNode instanceof Element)) {\n        return Promise.resolve(clonedNode);\n    }\n    return Promise.resolve(clonedNode)\n        .then((node) => embedBackground(node, options))\n        .then((node) => embedImageNode(node, options))\n        .then((node) => embedChildren(node, options));\n}\n//# sourceMappingURL=embedImages.js.map","export function applyStyleFromOptions(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=applyStyleFromOptions.js.map","import { toArray } from './util';\nimport { shouldEmbed, embedResources } from './embedResources';\nconst cssFetchCache = {};\nfunction fetchCSS(url) {\n    const cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const deferred = window.fetch(url).then((res) => ({\n        url,\n        cssText: res.text(),\n    }));\n    cssFetchCache[url] = deferred;\n    return deferred;\n}\nasync function embedFonts(meta, options) {\n    return meta.cssText.then((raw) => {\n        let cssText = raw;\n        const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n        const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n        const loadFonts = fontLocs.map((location) => {\n            let url = location.replace(regexUrl, '$1');\n            if (!url.startsWith('https://')) {\n                url = new URL(url, meta.url).href;\n            }\n            // eslint-disable-next-line promise/no-nesting\n            return window\n                .fetch(url, options.fetchRequestInit)\n                .then((res) => res.blob())\n                .then((blob) => new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                    // Side Effect\n                    cssText = cssText.replace(location, `url(${reader.result})`);\n                    resolve([location, reader.result]);\n                };\n                reader.onerror = reject;\n                reader.readAsDataURL(blob);\n            }));\n        });\n        // eslint-disable-next-line promise/no-nesting\n        return Promise.all(loadFonts).then(() => cssText);\n    });\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => metadata ? embedFonts(metadata, options) : '')\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => metadata ? embedFonts(metadata, options) : '')\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err.toString());\n                    }));\n                }\n                console.error('Error inlining remote css file', e.toString());\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    return new Promise((resolve, reject) => {\n        if (node.ownerDocument == null) {\n            reject(new Error('Provided element is not within a Document'));\n        }\n        resolve(toArray(node.ownerDocument.styleSheets));\n    })\n        .then((styleSheets) => getCSSRules(styleSheets, options))\n        .then(getWebFontRules);\n}\nexport async function getWebFontCSS(node, options) {\n    return parseWebFontRules(node, options)\n        .then((rules) => Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet\n            ? rule.parentStyleSheet.href\n            : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    })))\n        .then((cssTexts) => cssTexts.join('\\n'));\n}\nexport async function embedWebFonts(clonedNode, options) {\n    return (options.fontEmbedCSS != null\n        ? Promise.resolve(options.fontEmbedCSS)\n        : getWebFontCSS(clonedNode, options)).then((cssText) => {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n        return clonedNode;\n    });\n}\n//# sourceMappingURL=embedWebFonts.js.map","import { cloneNode } from './cloneNode';\nimport { embedImages } from './embedImages';\nimport { applyStyleFromOptions } from './applyStyleFromOptions';\nimport { embedWebFonts, getWebFontCSS } from './embedWebFonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyleFromOptions(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const { width, height } = getImageSize(node, options);\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","import { toJpeg } from 'html-to-image'\n\nself.addEventListener('message', async (e) => {\n  const { type, dom } = e.data\n  if (type === 'snapshot') {\n    const jpg = await toJpeg(dom, {\n      quality: 1,\n      canvasWidth: 640,\n      canvasHeight: 360,\n    })\n    self.postMessage({\n      type: 'snapshot_resp',\n      jpg,\n    })\n  }\n})\n"],"sourceRoot":""}